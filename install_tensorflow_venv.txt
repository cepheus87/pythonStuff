https://www.tensorflow.org/install/pip

Create a virtual environment:

virtualenv -p /usr/bin/python3.6 tf_gpu_p36/

source tf_gpu_p36/bin/activate

python -m pip install tensorflow-gpu

# python -m pip install --upgrade tensorflow-gpu


instalation test:
python -c "import tensorflow as tf; tf.enable_eager_execution(); print(tf.reduce_sum(tf.random_normal([1000, 1000])))"


venv in jupyter

(python -m) pip install ipykernel

python -m ipykernel install --user --name tf_gpu_p36 --display-name "tf_gpu_p36"

To make sure that "right" python is used:
Search for jupyter kernels:

jupyter kernelspec list

Then check in kernel.json (in your venv kernel path) path to python which is used in given kernel. Sometimes it must be changed for ".../your_venv/bin/python"



to test GPU usage:
https://www.tensorflow.org/guide/using_gpu

python ~/tensorflow/gpu_test.py


If have packages requirements in file:

python -m pip install -r filename.txt



Instruction about GPU installation at UBUNTU 16.04

If you have previous versions (optional):

sudo apt-get purge cuda
sudo apt-get purge libcudnn6
sudo apt-get purge libcudnn6-dev

Install:

To download:
wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.0.176-1_amd64.deb

sudo dpkg -i cuda-repo-ubuntu1604_9.0.176-1_amd64.deb
sudo apt-get update
sudo apt-get install cuda=9.0.176-1

downloaded from nvidia page
https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#download

sudo dpkg -i libcudnn7_7.2.1.38-1+cuda9.0_amd64.deb
sudo dpkg -i libcudnn7-dev_7.2.1.38-1+cuda9.0_amd64.deb
sudo dpkg -i libcudnn7-doc_7.2.1.38-1+cuda9.0_amd64.deb


added to .bashrc (do not know if needed)
export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}





Ubuntu 20.04, python 3.8

to install tensorflow

sudo apt install python3-dev python3-pip python3-venv


for GPU

check if drivers are installed

https://askubuntu.com/questions/68028/how-do-i-check-if-ubuntu-is-using-my-nvidia-graphics-card

shell:
lspci -vnnn | perl -lne 'print if /^\d+\:.+(\[\S+\:\S+\])/' | grep VGA

nvidia-detector 

https://towardsdatascience.com/installing-multiple-cuda-cudnn-versions-in-ubuntu-fcb6aa5194e2

install CUDA

https://www.how2shout.com/linux/how-to-install-cuda-on-ubuntu-20-04-lts-linux/

sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub

wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin

sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600

sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"

sudo apt-get update

sudo apt install cuda

echo 'export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}' >> ~/.bashrc

nvcc --version



Install cuDNN

https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html

download cudnn (login needed)


Install tensorflow

# Failed to build termcolor

python -m pip install --upgrade pip
python -m pip install --upgrade wheel
python -m pip install termcolor

python -m pip install tensorflow


testing:

import tensorflow as tf
tf.test.gpu_device_name()
print("Num GPUs Available: ", len(tf.config.list_physical_devices('GPU')))
tf.config.list_physical_devices('GPU')
